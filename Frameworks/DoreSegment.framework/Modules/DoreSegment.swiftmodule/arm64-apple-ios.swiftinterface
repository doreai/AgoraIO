// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DoreSegment
import CoreImage
import CoreML
import DoreCoreAI
@_exported import DoreSegment
import Foundation
import Swift
import UIKit
import _Concurrency
public struct Result {
}
public class segmentInput : CoreML.MLFeatureProvider {
  @objc public var featureNames: Swift.Set<Swift.String> {
    @objc get
  }
  @objc public func featureValue(for featureName: Swift.String) -> CoreML.MLFeatureValue?
  public init(image: CoreVideo.CVPixelBuffer)
  @objc deinit
}
public class segmentOut : CoreML.MLFeatureProvider {
  final public let provider: CoreML.MLFeatureProvider
  public var semanticPredictions: CoreML.MLMultiArray {
    get
    set
  }
  @objc public var featureNames: Swift.Set<Swift.String> {
    @objc get
  }
  @objc public func featureValue(for featureName: Swift.String) -> CoreML.MLFeatureValue?
  public init(semanticPredictions: CoreML.MLMultiArray)
  public init(features: CoreML.MLFeatureProvider)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class SegmentManager : ObjectiveC.NSObject {
  @objc public func iskeyValid() -> Swift.Bool
  @objc public func init_data(sdk_key: Swift.String, license_key: Swift.String)
  @objc public func ImagetoPixelbuffer(from image: UIKit.UIImage) -> CoreVideo.CVPixelBuffer?
  @objc public func resizeBuffer(pixelBuffer: CoreVideo.CVPixelBuffer) -> CoreVideo.CVPixelBuffer?
  @objc public func PixelBufferFromCGImage(cImage: CoreGraphics.CGImage, width: Swift.Int, height: Swift.Int) -> CoreVideo.CVPixelBuffer?
  @objc public func CGImageFromContext(context: CoreGraphics.CGContext) -> CoreGraphics.CGImage?
  @objc public func maskImage(image: CoreGraphics.CGImage, withMask maskImage: CoreGraphics.CGImage) -> UIKit.UIImage
  @objc public func resize_image(image: UIKit.UIImage, tosize: CoreGraphics.CGSize) -> UIKit.UIImage
  @objc public func ImageToPixelData(image: UIKit.UIImage) -> Foundation.Data?
  @objc public func run_model(pixelBuffer: CoreVideo.CVPixelBuffer, inputImage: UIKit.UIImage) -> UIKit.UIImage?
  @objc override dynamic public init()
  @objc deinit
}
